<?xml version="1.0" encoding="UTF-8"?>
<!-- status:这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出。
     monitorInterval:Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
             注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件， 文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<Configuration status="off">
    <Appenders>
        <!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
        <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
        <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
        <!--输出日志的格式
         %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
         %p : 日志输出格式
         %c : logger的名称
         %m : 日志内容，即 logger.info("message")
         %n : 换行符
         %C : Java类名
         %L : 日志输出所在行数
         %M : 日志输出所在方法名
         hostName : 本地机器名
         hostAddress : 本地ip地址 -->

        <!--这个输出控制台的配置，这里输出DEBUG及以上级别的信息到System.out -->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) . -->
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY" />
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
            <!-- <PatternLayout pattern="%5p [%t] %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n" /> -->
        </Console>
        <!-- 这个输出控制台的配置，这里输出error及以上级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
        <Console name="console_err" target="SYSTEM_ERR">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
            <PatternLayout pattern="%5p [%t] %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n" />
        </Console>

    </Appenders>

    <Loggers>
        <!-- 配置日志的根节点 -->
        <!-- 定义logger，只有定义了logger并引入了appender，appender才会生效 -->
        <Root level="trace" additivity="false">
            <!-- 这里是输入到控制台-->
            <AppenderRef ref="Console"/>
            <AppenderRef ref="console_err"/>

        </Root>
    </Loggers>

</Configuration>
